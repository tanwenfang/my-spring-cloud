#============================单点配置=========================
#配置所在服务端访问地址（适用于只有单台配置服务器情况）
#spring.cloud.config.uri=http://localhost:8888/
#配置名称，结合下面的profile可以匹配到名称为：myconfigclient-dev.properties的文件
#配置文件在远程仓库对应的名称
spring.cloud.config.name=myconfigclient
#配置文件使用的版本，实际获取到的配置文件具体名称是：myconfigclient-dev.properties/myconfigclien-dev.yml等
spring.cloud.config.profile=dev

#============================分布式配置========================
#开启Config服务发现支持
spring.cloud.config.discovery.enabled=true
#指定server端的name,也就是server端spring.application.name的值
spring.cloud.config.discovery.serviceId=config-server
#eureka注册中心地址
eureka.client.serviceUrl.defaultZone=http://eureka-server1:9001/eureka/,http://eureka-server2:9002/eureka/,http://eureka-server3:9003/eureka/



#开启消息跟踪
spring.cloud.bus.trace.enabled=true

#消息总线用到的mq配置
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=yu
spring.rabbitmq.password=123456

#是否启动安全验证
management.security.enabled=false

spring.profiles.active=configClient2

#默认值配置
#spring.cloud.config.uri=http://127.0.0.1:${config.port:8888}
#spring.cloud.config.name=myconfigclient
#spring.cloud.config.profile=${config.profile:dev}

#仓库中的配置文件会被转换成web接口，访问可以参照以下的规则：
#/{application}/{profile}[/{label}]
#/{application}-{profile}.yml
#/{label}/{application}-{profile}.yml
#/{application}-{profile}.properties
#/{label}/{application}-{profile}.properties

#spring.cloud.config.name：对应{application}部分
#spring.cloud.config.profile：对应{profile}部分
#spring.cloud.config.label：对应git的分支。如果配置中心使用的是本地存储，则该参数无用
#spring.cloud.config.uri：配置中心的具体地址
#spring.cloud.config.discovery.service-id：指定配置中心的service-id，便于扩展为高可用配置集群。